// <auto-generated />
using System;
using EGAH.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EGAH.Context.MigrationsPostgreSQL.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EGAH.Context.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EGAH.Context.Entities.Incident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FirstEventId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SecondEventId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirstEventId")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SecondEventId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("EGAH.Context.Entities.Incident", b =>
                {
                    b.HasOne("EGAH.Context.Entities.Event", "FirstEvent")
                        .WithOne("Incident")
                        .HasForeignKey("EGAH.Context.Entities.Incident", "FirstEventId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EGAH.Context.Entities.Event", "SecondEvent")
                        .WithMany()
                        .HasForeignKey("SecondEventId");

                    b.Navigation("FirstEvent");

                    b.Navigation("SecondEvent");
                });

            modelBuilder.Entity("EGAH.Context.Entities.Event", b =>
                {
                    b.Navigation("Incident");
                });
#pragma warning restore 612, 618
        }
    }
}
